
@import url('https://fonts.googleapis.com/css2?family=Orbitron&display=swap');

@property --num {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

$dark-grey: #1a1a1a;
$black: #000000;
$trans-dark-grey: rgba(0, 0, 0, 0.85);
$white: #ffffff;
$offwhite: #f1f1f1;
$grey1: rgba(255,255,255,.5);
$grey2: #b5b5b5;
$neon-blue: #00FDFE;
$neon-pink: #FF5FBB;

@keyframes initText{
  0% {content:"Initializing system . . ." }
  17% {content:"Initializing system . . . \00000a Loading core modules . . ." }
  27% {content:"Initializing system . . . \00000a Loading core modules . . . \00000a Verifying user permissions . . . " }
  36% {content:"Initializing system . . . \00000a Loading core modules . . . \00000a Verifying user permissions . . . \00000a Compiling source code . . . " }
  42% {content:"Initializing system . . . \00000a Loading core modules . . . \00000a Verifying user permissions . . . \00000a Compiling source code . . . \00000a Running diagnostics . . ." }
  49% {content:"Loading core modules . . . \00000a Verifying user permissions . . . \00000a Compiling source code . . . \00000a Running diagnostics . . . \00000a Establishing secure connection . . ." }
  60% {content:"Verifying user permissions . . . \00000a Compiling source code . . . \00000a Running diagnostics . . . \00000a Establishing secure connection . . . \00000a Scanning for vulnerabilities . . ." }
  66% {content:"Compiling source code . . . \00000a Running diagnostics . . . \00000a Establishing secure connection . . . \00000a Scanning for vulnerabilities . . . \00000a Loading user interface . . . \00000a" }
  78% {content:"Running diagnostics . . . \00000a Establishing secure connection . . . \00000a Scanning for vulnerabilities . . . \00000a Loading user interface . . . \00000a Executing startup procedures . . . \00000a" }
  100% {content:"Establishing secure connection . . . \00000a Scanning for vulnerabilities . . . \00000a Loading user interface . . . \00000a Executing startup procedures . . . \00000a Initializing database connections . . . \00000a"   }
}

@keyframes opcty{
  0% { opacity:0 }
  100% { opacity:1 }
}

@keyframes counting{
    0% { --num: 0 }
    60% { --num: 66 }
    100% { --num: 100 }
}

@keyframes charging {
  0%{ width:0% }
  60%{ width:66% }
  100%{ width:100% }
}

@keyframes rotate{
  0%{
    transform: rotate(0)
  }
  100%{
    transform: rotate(360deg)
  }
}
.flex{
  display:flex;
}

body{
  background-color: $black;
  color: $offwhite;
  overflow:hidden;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}

audio {
   display: block;
}

.colors-bg {
  display: flex;
  position: absolute;
  z-index: -1;
  opacity: 0.08;
  height: 100vh;
  width: 100vw;
  background-position: 0px 0px,0px 0px,0px 0px,0px 0px,0px 0px;
  background-image: repeating-linear-gradient(315deg, #00FFFF2E 92%, #073AFF00 100%),repeating-radial-gradient(75% 75% at 238% 218%, #00FFFF12 30%, #073AFF14 39%),radial-gradient(99% 99% at 109% 2%, #00C9FFFF 0%, #073AFF00 100%),radial-gradient(99% 99% at 21% 78%, $neon-blue 0%, #073AFF00 100%),radial-gradient(160% 154% at 711px -303px, #2000FFFF 0%, #073AFFFF 100%);
}

.container{
  display:contents;
  flex:1;
  width: fit-content;
  overflow: visible;
  position: relative;
  z-index: 99;
}

#fake-loader {
  display: none;
}

#video {
  display: none;
  flex-direction: column;
  font-family:'Orbitron';
  iframe, h5 {
    z-index: 99;
  }
}


#loader{
  display:flex;
  flex-direction:column;
  width:80%;
  z-index: 99;
  animation: opcty 1s  ease-in-out;
    
  .loading-text{
    font-family:'Orbitron';
    letter-spacing:0.3rem;
  }
  
  .therefore{
    font-size:24px;
    animation:rotate 1s linear infinite;
    padding-top:9.5px;
    height:fit;
  }
  .loading-number{
    counter-reset: num var(--num);
    margin-left:auto;
    transition: --num 5s;
    animation: counting 5s  ease-in-out;
    font-family:'Orbitron';
    animation-fill-mode: forwards;
    
    &:before{
    font-family:'Orbitron';
    content: counter(num);
    }
  }
}


#loading-bar-border{
  display:flex;
  align-items:center;
  padding:3px;
  border-radius:3px;
  border-top:1px solid $grey1;
  border-bottom:1px solid $grey1;
  width:100%;
  
  & .loading-bar{
    height:.6rem;
    margin:1px 0px;
    background:$white;
    animation:charging 5s  ease-in-out;
    animation-fill-mode: forwards;
    
  }
}

#warning{
  margin-top:.5rem;
  font-family:'Orbitron';
  display:flex;
  height:1.2rem;
  
  .exclamation{
    width:1rem;
    display:flex;
    justify-content:center;
    background-color:$white;
    color:$black;
    border-radius:3px;
  }
}


#line-cascates{
  margin-left:auto;
  display:flex;
  align-items:end;
  margin-top:5rem;
  &:after{
    height:5rem;
    font-size:12px;
    white-space: pre;
    text-align:end;
    color:$grey2;
    content:"";
    animation: initText 5s ease;
    animation-fill-mode: forwards;
  }
}

/*====================================================*/

.glitch {
  color: white;
  font-size: 8vw;
  position: relative;
  width: 300px;
  margin: 0 auto;
  font-family: 'Orbitron';
  text-align: center;
}

@keyframes noise-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i * (1 / $steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}

.glitch:after,
.glitch:before {
  content: attr(data-text);
  position: absolute;
  left: 0; /* Adjust this value according to your alignment needs */
  right: 0; /* Adjust this value according to your alignment needs */
  text-shadow: -1px 0 red, 1px 0 blue; /* Combine both shadows */
  top: 0;
  color: white;
  font-family: 'Orbitron';
  background: black;
  overflow: hidden;
  clip: rect(0, 900px, 0, 0);
}

.glitch:after {
  left: 2px; /* Adjust the left offset for alignment */
  animation: noise-anim 2s infinite linear alternate-reverse;
}

.glitch:before {
  right: 2px; /* Adjust the right offset for alignment */
  animation: noise-anim-2 3s infinite linear alternate-reverse;
}

@keyframes noise-anim-2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i * (1 / $steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }
}

@media screen and (min-width: 1200px) {
  .glitch {
    font-size: 5rem; /* Set font size to 22px for viewports larger than 550px */
  }
}

/*===========================================================*/

#loader-content {
  animation: myfadeout 0.2s ease-in-out;
}

#main-content, #error { 
  display: none;
  animation: myfadein 1.3s ease-in-out;

  h2 {
    animation: text-flicker 3s infinite;
  }
}

@media only screen and (max-width: 280px) {
  #congratulations{
    font-size: 1.5rem;
  }
}

#entered {
  max-width: 500px !important;
}

@keyframes myfadeout {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes myfadein {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes text-flicker {
  0% {
    opacity: 0.1;
  }

  2% {
    opacity: 1;
  }

  8% {
    opacity: 0.1;
  }

  9% {
    opacity: 1;
  }

  12% {
    opacity: 0.1;
  }
  20% {
    opacity: 1;
  }
  25% {
    opacity: 0.3;
  }
  30% {
    opacity: 1;
  }

  70% {
    opacity: 0.7;
  }
  72% {
    opacity: 0.2;
  }

  77% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.9;
  }
}


/*========================================================*/
@mixin backlight($x, $y, $spread, $size, $colorA, $colorB, $duration) {
  &:after {
    position: absolute;
    content: "";
    top: $y;
    left: $x;
    right: 0;
    z-index: -1;
    height: 100%;
    width: 100%;
    margin: 0 auto;
    transform: scale($size);
    -webkit-filter: blur($spread);
    -moz-filter: blur($spread);
    -ms-filter: blur($spread);
    filter: blur($spread);
    background: linear-gradient(270deg, $colorA, $colorB);
    background-size: 200% 200%;
    animation: animateGlow $duration ease infinite;
    
    @keyframes animateGlow {
      0%{background-position:50% 50%}
      50%{background-position:100% 50%}
      100%{background-position:50% 50%}
    }
  }
}

.form-cont {
  position: relative;
  max-width: 300px;
  height: fit-content;
  width: 80%;
  padding: 2rem;
  font-family:'Orbitron';
  text-align: center;
  color: $offwhite;
  background-color: $trans-dark-grey;
  border: solid 1px $neon-blue;
  border-radius: 10px;
  animation: textColor 10s ease infinite;
  flex-wrap: wrap;
  @include backlight(0, 0, 2vw, 1, $neon-blue, $neon-blue, 10s);
    
  @keyframes textColor {
    0% {
      color: $white;
    }
    50% {
      color: $grey2;
    }
    100% {
      color: $white;
    }
  }

  form {
    font-family:'Orbitron';
    display: flex;
    align-items: center;
    
    input {
      background: transparent;
      border: solid 1px $offwhite;
      color: $offwhite;
      border-radius: 5px;
      font-family: inherit;
      width: 100%;
      display: flex;
    }
    
    input[type=submit]{
      width: fit-content;
      animation: border-flicker 5s ease infinite;
      transition: all 0.3s ease-in-out;

      &:hover {
        background-color: $neon-blue;
        color: $black;
        border-color: $black;
        cursor: pointer;
        animation: none;
      }
    }
    
  }
}

.faulty-flicker {
  animation: text-flicker 1s ease infinite;
}

.normal-flicker {
  animation: text-flicker 3s ease infinite;
}

@keyframes border-flicker {
  0% {
    opacity: 0.1;
  }
  2% {
    opacity: 1;
  }
  4% {
    opacity: 0.1;
  }

  8% {
    opacity: 1;
  }
  70% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}


/*===========================================================*/
#particles-js{
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

canvas {
  overflow: hidden;
}

